module.exports = {
  root: true,
  extends: ['@antfu'],
  globals: {
    defineNuxtConfig: 'readonly',
  },
  rules: {
    'camelcase': ['warn'],
    'import/newline-after-import': ['warn'],
    'no-unused-vars': ['warn'],
    'vue/no-unused-vars': ['warn'],
    'vue/new-line-between-multi-line-property': ['warn', { minLineOfMultilineProperty: 3 }],
    'vue/max-attributes-per-line': ['error', { singleline: { max: 5 }, multiline: { max: 1 } }],
    'vue/first-attribute-linebreak': ['error', { singleline: 'beside' }],
    'vue/component-definition-name-casing': ['error', 'PascalCase'],
    'vue/component-name-in-template-casing': ['error', 'PascalCase', { registeredComponentsOnly: false }],
    'vue/match-component-import-name': ['error'],
    'vue/component-tags-order': ['error', {
      order: ['template', 'script', 'style'],
    }],
    'vue/order-in-components': ['warn', {
      order: [
        'el',
        'name',
        'key',
        'parent',
        'functional',
        ['delimiters', 'comments'],
        ['components', 'directives', 'filters'],
        'extends',
        'mixins',
        ['provide', 'inject'],
        'ROUTER_GUARDS',
        'layout',
        'middleware',
        'validate',
        'scrollToTop',
        'transition',
        'loading',
        'inheritAttrs',
        'model',
        ['props', 'propsData'],
        'emits',
        'setup',
        'asyncData',
        'data',
        'fetch',
        'computed',
        'watch',
        'watchQuery',
        'LIFECYCLE_HOOKS',
        'methods',
        ['template', 'render'],
        'renderError',
        'head',
      ],
    }],
    '@typescript-eslint/brace-style': ['error', '1tbs', { allowSingleLine: true }],
    'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    '@stylistic/ts/brace-style': ['error', '1tbs', { allowSingleLine: true }],
    'vue/quote-props': ['error', 'as-needed'],
    'curly': ['error', 'all'],
    'no-sequences': 0,
    'max-statements-per-line': ['error', { max: 2 }],
    'space-unary-ops': ['error', { words: true, nonwords: false, overrides: { '!': true, '!!': true } }],
    'no-alert': 0,
  },
}
